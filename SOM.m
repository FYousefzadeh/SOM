clear all;
clc;
close all;
cd('Datasets');
cd('PartB');
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: E:\Subjects\HW\NNs\project_2\Datasets\PartB\Data.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2020/05/11 03:13:23

%% Import the data
Data = xlsread('E:\Subjects\HW\NNs\project_2\Datasets\PartB\Data.xlsx','Sheet1');

%% Clear temporary variables
clearvars raw;
%%
R=(randperm(length(Data)))';
indices_train=R(1:800);
indices_test=R(801:1000);
s_train= Data(indices_train,1:2);
test=Data(indices_test,1:2);
w=(randi([-8 8],10,10,2)).*(rand(1,1));
figure();
plot(w(:,:,1),w(:,:,2),'x');legend('Weight','Location','BestOutside');
figure();
scatter(s_train(:,1),s_train(:,2),'.','blue');
hold on
plot(w(:,:,1),w(:,:,2),'x');legend('Training Data','Weight');
for s=1:100
    sigma=(1.7)*exp(-(s/(1000/log(1.5))));
    eta=(0.9)*exp(-(s/1000));
        for i=1:800
            for j=1:10
                for l=1:10
                    W=[w(j,l,1),w(j,l,2)];
                    dw(j,l)=(sqrt((s_train(i,1)-W(1))^2+(s_train(i,2)-W(2))^2));
                end
            end
            [m,k]=min(dw);
            [M,K]=min(m);
            y_k=[k(K),K];
            for t=1:10
                for u=1:10
                d=(sqrt((y_k(1)-t)^2+(y_k(2)-u)^2));
                h=exp(-((d^2)/2*(sigma^2)));
                w(t,u,1)=w(t,u,1)+((eta*h*(s_train(i,1)-w(t,u,1))));
                w(t,u,2)=w(t,u,2)+((eta*h*(s_train(i,2)-w(t,u,2))));
                end
            end
        end
end
figure();
scatter(s_train(:,1),s_train(:,2),'.','blue');
hold on
plot(w(:,:,1),w(:,:,2),'x');legend('Training Data','Weight','Location','BestOutside');
hold on
%%
d_sum=0;
for i=1:200
    for j=1:10
        for l=1:10
            W=[w(j,l,1),w(j,l,2)];
            dw_test(j,l)=(sqrt((test(i,1)-W(1))^2+(test(i,2)-W(2))^2));
        end
    end
    [m,k]=min(dw_test);
    [M,K]=min(m);
    y_k_test=[k(K),K];
    w_k_test1(i,:,:)=w(k(K),K,1);
    w_k_test2(i,:,:)=w(k(K),K,2);
    min_dis(i,1)=M;
end
total_min_dis=sum(min_dis);
w_k_test=cat(3,w_k_test1,w_k_test2);
figure();
plot(s_train(:,1),s_train(:,2),'.','MarkeredgeColor','bl');
hold on
plot(w(:,:,1),w(:,:,2),'x','MarkeredgeColor','g');
hold on
plot(w_k_test(:,:,1),w_k_test(:,:,2),'o','MarkeredgeColor','r');legend('Winner''Location','BestOutside');
hold off
legend('Training Data','Weight','Winner','Location','BestOutside');




           
